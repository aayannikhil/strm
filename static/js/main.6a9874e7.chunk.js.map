{"version":3,"sources":["components/core.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","textAlign","avatar","margin","backgroundColor","palette","primary","main","success","color","form","width","submit","Core","useState","entry","setEntry","stoploss","setStoploss","risk","setRisk","dif","diff","quantity","Math","round","rupeeTarget","target","parseInt","classes","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","Grid","container","item","xs","sm","TextField","name","fullWidth","id","type","label","value","onChange","event","Button","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a9874e7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  success: {\n    color: theme.palette.success.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 5),\n  },\n}));\n\nexport default function Core() {\n  const [entry, setEntry] = useState(\"\");\n  const [stoploss, setStoploss] = useState(\"\");\n  const [risk, setRisk] = useState(\"\");\n\n  const dif = entry - stoploss;\n  const diff = dif > 0 ? dif : \"Entry should be greater than Stoploss\";\n  const quantity =\n    diff > 0 && risk === \"\"\n      ? \"Enter Risk Amount\"\n      : diff > 0 && risk > 0\n      ? Math.round(risk / diff)\n      : 0;\n  const rupeeTarget = diff > 0 ? diff * 2 : 0;\n  const target = diff > 0 ? parseInt(entry) + parseInt(rupeeTarget) : 0;\n\n  function resetInput() {\n    setEntry(\"\");\n    setStoploss(\"\");\n    setRisk(\"\");\n  }\n\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <TimelineIcon />\n        </Avatar>\n        <Typography variant=\"h4\">Swing Trading Risk Management</Typography>\n        <div className={classes.form}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                name=\"entry\"\n                variant=\"outlined\"\n                // required\n                fullWidth\n                id=\"entry\"\n                type=\"number\"\n                label=\"Entry\"\n                color=\"success\"\n                value={entry}\n                onChange={(event) => setEntry(event.target.value)}\n                // autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                // required\n                fullWidth\n                id=\"stopLoss\"\n                label=\"Stop Loss\"\n                type=\"number\"\n                name=\"stopLoss\"\n                value={stoploss}\n                onChange={(event) => setStoploss(event.target.value)}\n                color=\"secondary\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant=\"subtitle1\">\n                Difference of Entry and Stop Loss:\n              </Typography>\n              <Typography color=\"secondary\" variant=\"subtitle2\">\n                {diff}\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                // required\n                fullWidth\n                id=\"risk\"\n                label=\"How much Risk?\"\n                type=\"number\"\n                name=\"risk\"\n                color=\"secondary\"\n                value={risk}\n                onChange={(event) => setRisk(event.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant=\"subtitle1\">Quantity to buy:</Typography>\n              <Typography color=\"primary\" variant=\"subtitle2\">\n                {quantity}\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant=\"subtitle1\">Rupee Target:</Typography>\n              <Typography color=\"primary\" variant=\"subtitle2\">\n                {rupeeTarget}\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant=\"subtitle1\">Target:</Typography>\n              <Typography className={classes.success} variant=\"subtitle2\">\n                {target}\n              </Typography>\n            </Grid>\n          </Grid>\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.submit}\n            onClick={resetInput}\n          >\n            Reset\n          </Button>\n        </div>\n      </div>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport Core from \"./components/core\";\n\nexport default function App() {\n  return <Core />;\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}